{"version":3,"file":"static/js/310.b33ed565.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/contact-form/ContactForm.styled.js","components/contact-form/ContactForm.jsx","components/contact-list/ContactList.styled.js","components/contact-list/ContactList.jsx","page/contacts/Contacts.styled.js","GlobalStyle.js","components/filters/Flters.jsx","page/contacts/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 30px;\n  border-radius: 8px;\n  color: grey;\n  padding-left: 10px;\n  border-color: #e7ecf2;\n  border-width: 1px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  padding-left: 10px;\n  & ::placeholder {\n    font-size: 12px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  align-items: center;\n  appearance: none;\n  background-color: #e7ecf2;\n  border-radius: 4px;\n  border-width: 0;\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\n    rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n  box-sizing: border-box;\n  color: #36395a;\n  cursor: pointer;\n  display: inline-flex;\n  height: 48px;\n  justify-content: center;\n  line-height: 1;\n  list-style: none;\n  overflow: hidden;\n  padding-left: 16px;\n  padding-right: 16px;\n  position: relative;\n  text-align: left;\n  text-decoration: none;\n  transition: box-shadow 0.15s, transform 0.15s;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  white-space: nowrap;\n  will-change: box-shadow, transform;\n  font-size: 18px;\n  margin: 20px 0 20px 0;\n\n  &:focus {\n    box-shadow: #d6d6e7 0 0 0 1.5px inset, rgba(45, 35, 66, 0.4) 0 2px 4px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n  }\n\n  &:hover {\n    box-shadow: rgba(45, 35, 66, 0.4) 0 4px 8px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n    transform: translateY(-2px);\n  }\n\n  &:active {\n    box-shadow: #d6d6e7 0 3px 7px inset;\n    transform: translateY(2px);\n  }\n`;\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Button, Form, Input, Label } from './ContactForm.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    name === 'name' && setName(value);\n    name === 'number' && setNumber(value);\n  };\n\n  const handleContactsAdd = newContact => {\n    const { name } = newContact;\n    const isNameContain = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isNameContain) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact({ id: nanoid(), name, number }));\n  };\n  const handleOnSubmitForm = event => {\n    event.preventDefault();\n    handleContactsAdd({ id: nanoid(), name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleOnSubmitForm}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          value={name}\n          onChange={handleInputChange}\n          name=\"name\"\n          placeholder=\"Your name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Phone number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n\n      <Button type=\"submit\">Add Contact</Button>\n    </Form>\n  );\n};\n","import { ThreeDots } from 'react-loader-spinner';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Item = styled.ul`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n  border: 1px solid grey;\n  box-shadow: 5px 5px 5px grey;\n  width: 100%;\n  padding: 20px;\n  justify-content: space-around;\n  border-radius: 8px;\n  margin: 30px 0 0 0;\n`;\n\nexport const Button = styled.button`\n  background: #e7ecf2;\n  border-width: 0;\n  border-radius: 6px;\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\n    rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n  box-sizing: border-box;\n  color: #36395a;\n  cursor: pointer;\n  display: inline-block;\n  font-family: nunito, roboto, proxima-nova, 'proxima nova', sans-serif;\n  font-size: 16px;\n  font-weight: 800;\n  line-height: 16px;\n  min-height: 40px;\n  outline: 0;\n  padding: 12px 14px;\n  text-align: center;\n  text-rendering: geometricprecision;\n  text-transform: none;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  vertical-align: middle;\n\n  &:hover,\n  &:active {\n    background-color: initial;\n    background-position: 0 0;\n    color: #ff4742;\n    opacity: 0.5;\n  }\n`;\n\nexport const threeDots = (\n  <ThreeDots\n    height=\"80\"\n    width=\"80\"\n    radius=\"9\"\n    color=\"#a7b1ba\"\n    ariaLabel=\"three-dots-loading\"\n    wrapperStyle={{}}\n    wrapperClassName=\"\"\n    visible={true}\n  />\n);\n","import { Button, Item, List, threeDots } from './ContactList.styled';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {isLoading && threeDots}\n      {error && <b>{error}</b>}\n      {!isLoading &&\n        visibleContacts.map(contact => (\n          <Item key={contact.id}>\n            {contact.name}: {contact.number}\n            <Button\n              type=\"button\"\n              onClick={() => {\n                dispatch(deleteContact(contact.id));\n              }}\n            >\n              Delete\n            </Button>\n          </Item>\n        ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #ffffff;\n  width: 700px;\n  margin: auto;\n  padding-top: 50px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n`;\n\nexport const TitleContact = styled.h2`\n  margin: 20px 0 20px 0;\n`;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nbody {\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\np {\n  margin: 0;\n}\n\nul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\nbutton{\n  padding: 0;\n}\n`;\n","import { Input } from 'components/contact-form/ContactForm.styled';\n\nimport { filterContact } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nexport const Filters = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const changeFilter = newFilter => {\n    dispatch(filterContact(newFilter));\n  };\n  return (\n    <Input\n      type=\"text\"\n      value={filter}\n      name=\"filter\"\n      placeholder=\"Write to filter name\"\n      onChange={event => changeFilter(event.target.value.toLowerCase().trim())}\n    />\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components/contact-form/ContactForm';\nimport { ContactList } from 'components/contact-list/ContactList';\nimport { Container, Title, TitleContact } from './Contacts.styled';\nimport { GlobalStyle } from 'GlobalStyle';\nimport { Filters } from 'components/filters/Flters';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <TitleContact>Contacts</TitleContact>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filters />\n      <ContactList />\n      <GlobalStyle />\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","Input","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Form","_templateObject3","Button","_templateObject4","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useSelector","handleInputChange","event","_event$currentTarget","currentTarget","value","reset","_jsxs","onSubmit","preventDefault","newContact","find","alert","concat","addContact","id","nanoid","handleContactsAdd","children","_jsx","type","onChange","placeholder","pattern","title","required","List","Item","threeDots","ThreeDots","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ContactList","useEffect","fetchContacts","visibleContacts","map","onClick","deleteContact","Container","Title","TitleContact","GlobalStyle","createGlobalStyle","Filters","newFilter","target","trim","filterContact","Contacts","Helmet"],"sourceRoot":""}